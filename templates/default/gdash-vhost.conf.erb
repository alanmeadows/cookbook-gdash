# GDash Apache Virtual Host
#
# Generated by Chef
<% unless node['gdash']['listen_port'] == "80" or node['gdash']['listen_port'] == "443" %>
<% if not node['recipes'].include? "infra-graphing::server" -%>
Listen <%= node['gdash']['listen_port'] %>
<% end %>
<% end %>

NameVirtualHost *:<%= node['gdash']['listen_port'] %>

<VirtualHost *:<%= node['gdash']['listen_port']%>>
        ServerName <%= node['gdash']['server_hostname'] %>
        <% unless node['gdash']['server_hostname_aliases'].empty? %>
        ServerAlias <%= [node['gdash']['server_hostname_aliases']].flatten.compact.join(" ") %>
        <% end %>
        DocumentRoot "<%= node['gdash']['doc_root'] %>"
        ErrorLog error.log
        CustomLog gdash-access.log common

        <% if node['gdash']['http_auth_method'] == "cas" %>
        CASLoginURL <%= node['gdash']['cas_login_url'] %>
        CASValidateURL <%= node['gdash']['cas_validate_url'] %>
        CASValidateServer <%= node['gdash']['cas_validate_server'] %>
        CASRootProxiedAs <%= node['gdash']['cas_root_proxy_url'] %>
        <% end %>

        <% if node['gdash']['rubybin'] %>
        PassengerRuby <%= node['gdash']['rubybin'] %>
        <% end %>

        <Location "/">
                <% case node['gdash']['http_auth_method']
                  when "digest" %>
                AuthType Digest
                AuthName "<%= node['gdash']['http_auth_realm'] %>"
                AuthDigestDomain /

                AuthDigestProvider file
                AuthUserFile "<%= node['gdash']['http_auth_file'] %>"
                Require valid-user
                <% when "basic" %>
                AuthType Basic
                AuthName "<%= node['gdash']['http_auth_realm'] %>"
                AuthBasicProvider file
                AuthUserFile "<%= node['gdash']['http_auth_file'] %>"
                Require valid-user
                <% when "cas" %>
                Authtype CAS
                Require valid-user 
                <% end %>
        </Location>

</VirtualHost>
